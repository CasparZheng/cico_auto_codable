<%
func codingKeysFor(_ type: Type) -> (existedKey: Bool, generated: [String], all: [String]) {
    var generatedKeyArray = [String]()
    var allKeyArray = [String]()

    guard (type is Struct || type is Class) else {
        return (existedKey: false, generated: generatedKeyArray, all: allKeyArray)
    }

    var ignoredKeyArray = [String]()
    var existedIgnoredKey = false
    if let IgnoredCodingKeysType = type.containedType["CICOIgnoredCodingKeys"] as? Enum {
        existedIgnoredKey = true
        ignoredKeyArray = IgnoredCodingKeysType.cases.map({ $0.name })
    }
    let ignoredKeySet = Set(ignoredKeyArray)

    var existingKeyArray = [String]()
    var existedKey = false
    if let codingKeysType = type.containedType["CodingKeys"] as? Enum {
        existedKey = true
        existingKeyArray = codingKeysType.cases.map({ $0.name })
        allKeyArray = codingKeysType.cases.map({ $0.name })
    }
    let existingKeySet = Set(existingKeyArray)

    if existedIgnoredKey || existedKey {
        let storedVariablesKeys = type.storedVariables.map({ $0.name })
        for key in storedVariablesKeys where !existingKeySet.contains(key) && !ignoredKeySet.contains(key) {
            generatedKeyArray.append(key)
            allKeyArray.append(key)
        }
    } else {
        for variable in type.storedVariables {
            allKeyArray.append(variable.name)
        }
    }

    return (existedKey: existedKey, generated: generatedKeyArray, all: allKeyArray)
}
-%>


<%_ for type in types.all
        where (type is Struct || type is Class)
        && (type.implements["CICOAutoCodable"] != nil) { -%>
    <%_ let codingKeys = codingKeysFor(type) -%>
    <%_ if codingKeys.generated.count > 0 { -%>
        <%_ if !codingKeys.existedKey { -%>
// sourcery:inline:auto:<%= type.name %>.CICOAutoCodable_Auto_Generated_CodingKeys_Head
    enum CodingKeys: String, CodingKey {
        <%_ } -%>
// sourcery:inline:auto:<%= type.name %>.CodingKeys.CICOAutoCodable_Auto_Generated_CodingKeys
        <%_ for key in codingKeys.generated { -%>
        case <%= key %>
        <%_ } -%>
        <%_ if !codingKeys.existedKey { -%>
// sourcery:inline:auto:<%= type.name %>..CICOAutoCodable_Auto_Generated_CodingKeys_Tail
    }
        <%_ } -%>
// sourcery:end
    <%_ } -%>
<%_ } -%>
